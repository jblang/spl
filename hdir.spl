PROGRAM HDIR;

{	Version history
	- 12-Jun-2010, P. Schorn, fixed SIMH version check
	- 06-Jul-2008, P. Schorn, added check for printable characters in
			file name
	- 24-Nov-2006, P. Schorn, added L option
	- 18-Nov-2006, P. Schorn, Initial version
}

PROCEDURE BDOS(WORD function, input);	EXTERNAL;
PROCEDURE INPORT(WORD port);		EXTERNAL;
PROCEDURE OUTPOR(WORD port, data);	EXTERNAL;
PROCEDURE STPSUB;			EXTERNAL;

CONST	printCharCmd			= 2h;
	printStringCmd			= 9h;
	cr				= 13;
	lf				= 10;
	crlf				= cr + 256 * lf;
	SIMHPort			= 0feh;
	getVersionSIMHCmd		= 6;
	getHostOSPathSeparatorCmd	= 28;
	getHostFilenamesCmd		= 29;
	resetSIMHInterfaceCmd		= 14;
	commandLineAddress		= 80h;

BYTE	usage 		= (
	'Usage: HDIR [<path>] [L]',				crlf,
	'Show the contents of the optional underlying host directory <path>',
								crlf,
	'Option L transforms the <path> to all lower case',	crlf,
								crlf, '$':[1]);
	signon		= ('HDIR V-1.04 (12-Jun-10) SIMH Interface V');
	SIMHVersion	= ('XXX', crlf, '$':[1]);
	noFile		= ('No file$');
	version3Required= ('Interface V003 or above required.', crlf, '$':[1]);
	noOS9		= ('Macintosh OS 9 not supported.',  crlf, '$':[1]);
	simhrequired	= ('SIMH required.');
	{ must be followed by crlfString }
	crlfString	= (crlf, '$':[1]);
	buffer		= (0, 0);
	ch, pos;
	defaultQuery	= (2:[1], ' *', 0:[1]);
	commandLine	AT commandLineAddress;

PROCEDURE printString(WORD stringp);
	BEGIN
	BDOS(printStringCmd, stringp)
	END printString;

PROCEDURE inport;
	BEGIN
	RETURN INPORT(SIMHPort)
	END inport;

PROCEDURE getNextCH;
	BEGIN
	OUTPOR(SIMHPort, getHostFilenamesCmd);
	ch := inport
	END getNextCH;

PROCEDURE removeTrailingSpace;
	BEGIN
	{ remove trailing spaces }
	WHILE (commandLine[0]:[1] >> 0) AND
			(commandLine[commandLine[0]:[1]]:[1] = ' ') DO
		commandLine[0]:[1] := commandLine[0]:[1] - 1
	ENDWHILE;
	END removeTrailingSpace;

LABEL	finis;

BEGIN { HDIR }
pos := 128;
WHILE pos >> 0 DO
	OUTPOR(SIMHPort, resetSIMHInterfaceCmd);
	pos := pos - 1
ENDWHILE;

OUTPOR(SIMHPort, getVersionSIMHCmd);
buffer[0]:[2] := inport + 256 * inport;
buffer[2]:[2] := inport + 256 * inport;
IF	buffer:[4] = simhrequired:[4]
	{ obtain three characters of version }
THEN	SIMHVersion[0]:[2] := inport + 256 * inport;
	SIMHVersion[2]:[1] := inport;
	IF	SIMHVersion[2]:[1] << '3'
	THEN	printString(@version3Required);
		GOTO finis
	ENDIF;
	REPEAT
	UNTIL	inport = 0;
	OUTPOR(SIMHPort, getHostOSPathSeparatorCmd);
	ch := inport;
	IF	ch = ':'
	THEN	printString(@noOS9);
		GOTO finis
	ENDIF
ELSE	printString(@simhrequired);
finis:	STPSUB;
	EXIT { no SIMH, terminate program }
ENDIF;
printString(@signon);

removeTrailingSpace;
{ remove leading spaces }
WHILE (commandLine[0]:[1] >>= 2) AND (commandLine[2]:[1] = ' ') DO
	pos := 2;
	WHILE pos << commandLine[0]:[1] DO
		commandLine[pos]:[1] := commandLine[pos + 1]:[1];
		pos := pos + 1
	ENDWHILE;
	commandLine[0]:[1] := commandLine[0]:[1] - 1
ENDWHILE;

IF	(commandLine[0]:[1] >>= 4) AND
	(commandLine[commandLine[0]:[1]]:[1] = 'L') AND
	(commandLine[commandLine[0]:[1] - 1]:[1] = ' ')
THEN	commandLine[commandLine[0]:[1]]:[1] := ' ';
	removeTrailingSpace;
	pos := 1;
	WHILE pos <<= commandLine[0]:[1] DO
		IF	('A' <<= commandLine[pos]:[1]) AND
			(commandLine[pos]:[1] << ('Z'+1))
		THEN	commandLine[pos]:[1] := commandLine[pos]:[1] +
				('a' - 'A')
		ENDIF;
		pos := pos + 1
	ENDWHILE
ENDIF;

IF	commandLine[0]:[1] = 0
THEN	printString(@usage);
	commandLine[0]:[4] := defaultQuery
ENDIF;

getNextCH;
IF	ch >> 0
THEN	pos := 0;
	LOOP
		REPEAT
			IF	(32 <= ch) AND (ch <= 127)
			THEN	BDOS(printCharCmd, ch);
				pos := pos + 1
			ENDIF;
			getNextCH
		UNTIL ch = 0;
		getNextCH;
		IF	ch >> 0
		THEN	IF	pos >> 59
			THEN	printString(@crlfString);
				pos := 0
			ELSE	REPEAT
					BDOS(printCharCmd, ' ');
					pos := pos + 1
				UNTIL pos MOD 20 = 0
			ENDIF
		ELSE	EXIT
		ENDIF
	ENDLOOP
ELSE	printString(@noFile)
ENDIF

END HDIR.
